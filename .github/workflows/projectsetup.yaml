name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      TFACTION:
        default: "apply"
        required: true
        type: choice
        options:
         - "apply"
         - "destroy"
permissions:
  contents: 'read'
  id-token: 'write'
env:
  gitlab_user: '${{ secrets.GITLAB_USER }}'
  gitlab_url: '${{ secrets.GITLAB_URL }}'
  gitlab_password: '${{ secrets.GITLAB_TOKEN }}'
  gitlab_lock: '${{ secrets.GITLAB_URL }}/lock'
  gitlab_unlock: '${{ secrets.GITLAB_URL }}/lock'
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.5
    - name: testing env print
      run: env
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init \
           -backend-config="username=$TF_VAR_gitlab_user" \
           -backend-config="password=$TF_VAR_gitlab_password" \
           -backend-config="address=$TF_VAR_gitlab_url" \
           -backend-config="lock_address=$TF_VAR_gitlab_lock" \
           -backend-config="unlock_address=$TF_VAR_gitlab_unlock"
      run: terraform init
      working-directory: labstart

    # Generates an execution plan for Terraform
    - name: Terraform Plan \
           -backend-config="username=$TF_VAR_gitlab_user" \
           -backend-config="password=$TF_VAR_gitlab_password" \
           -backend-config="address=$TF_VAR_gitlab_url" \
           -backend-config="lock_address=$TF_VAR_gitlab_lock" \
           -backend-config="unlock_address=$TF_VAR_gitlab_unlock"
      run: terraform plan -input=false
      working-directory: labstart

    - name: Terraform Apply
      if: ${{ github.event.inputs.TFACTION == 'apply' }}
      run: terraform apply -auto-approve -input=false  \
           -backend-config="username=$TF_VAR_gitlab_user" \
           -backend-config="password=$TF_VAR_gitlab_password" \
           -backend-config="address=$TF_VAR_gitlab_url" \
           -backend-config="lock_address=$TF_VAR_gitlab_lock" \
           -backend-config="unlock_address=$TF_VAR_gitlab_unlock"
      working-directory: labstart
    - name: Terraform destroy
      if: ${{ github.event.inputs.TFACTION == 'destroy' }}
      run: terraform destroy -auto-approve -input=false
      working-directory: labstart
